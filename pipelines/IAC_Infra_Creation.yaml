trigger: none

parameters:
  - name: environment
    displayName: 'Select environment'
    type: string
    default: 'dev'



variables:
- group: Infra_IAC_Var

pool:
  name: 'AgentPool1'

stages:
- stage: Terraform_Init_Apply
  displayName: 'Terraform Init & Apply'
  jobs:
    - job: terraform
      displayName: 'Run Terraform to Provision Infra'
      steps:
       
        - task: AzureCLI@2
          displayName: 'Login to Azure'
          inputs:
            azureSubscription: $(azureSubscription)
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az login --service-principal -u '$(client_id)' -p '$(client_secret)' --tenant '$(tenant_id)'
            

        - task: AzureCLI@2
          inputs:
            azureSubscription: $(azureSubscription)
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: '$(Build.SourcesDirectory)/infrastructure'
            inlineScript: |
              export ARM_CLIENT_ID="$(client_id)"             
              export ARM_CLIENT_SECRET="$(client_secret)"     
              export ARM_TENANT_ID="$(tenant_id)"            
              export ARM_SUBSCRIPTION_ID="$(subscription_id)"
              echo "ðŸ”§ Initializing Terraform..."
              terraform init -upgrade

              echo "ðŸ“¦ Validating Terraform..."
              terraform validate

              echo "ðŸ§  Planning Terraform changes..."
              terraform plan -var-file=$(tfvarsFile)

              echo "ðŸš€ Applying Terraform..."
              terraform apply -auto-approve -var-file=$(tfvarsFile)

- stage: Output_Stage
  displayName: 'Terraform Outputs'
  dependsOn: Terraform_Init_Apply
  jobs:
    - job: capture_outputs
      displayName: 'Extract Terraform Outputs'
      steps:
        - task: AzureCLI@2
          inputs:
            azureSubscription: $(azureSubscription)
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: '$(Build.SourcesDirectory)/infrastructure'
            inlineScript: |
              echo "ðŸª„ Capturing outputs..."
              echo "##vso[task.setvariable variable=aks_name]$(terraform output -raw aks_name)"
              echo "##vso[task.setvariable variable=acr_name]$(terraform output -raw acr_name)"
              echo "##vso[task.setvariable variable=keyvault_name]$(terraform output -raw keyvault_name)"
